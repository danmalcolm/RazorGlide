@using RazorGlide.Forms
@{
    // ASP.Net MVC template functionality tracks models that have been displayed to prevent
    // endless loop from occuring if these is a circular reference within the model graph.

    // However, the nested call is valid here - we call Html.Display to display the input
    // elements within the surrounding HTML - so we need to remove the current model from the
    // list of tracked objects.
    ControlGroupHelper.RemoveModelFromVisitedObjects(ViewData);
    var templateParams = ViewData["TemplateParams"] as InnerTemplateParams ?? new InnerTemplateParams();
    string labelText = templateParams.LabelText ?? LabelFormatter.LabelText(ViewData.ModelMetadata);
}
<div class="displaypanel-controlgroup">
    @Html.Label("", labelText, new { @class = "control-label" }) 
    <div class="displaypanel-value">
        @if (templateParams.TemplateDelegate != null)
        {
            Write(templateParams.TemplateDelegate());
        }
        else if (templateParams.ExecuteTemplate != null)
        {
            var helper = templateParams.ExecuteTemplate(Model);
            helper.WriteTo(GetOutputWriter());
        }
        else
        {
            @Html.Display("", templateParams.TemplateName, templateParams.HtmlFieldName, templateParams.AdditionalViewData)
        }
    </div>
</div>