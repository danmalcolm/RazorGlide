@using RazorGlide.Forms
@{

    // ASP.Net MVC template functionality tracks models that have been displayed to prevent
    // endless loop from occuring if there is a circular reference within the model graph.

    // However, the nested call is valid here - we call Html.Editor to display the input
    // elements within the surrounding HTML - so we need to remove the current model from the
    // list of tracked objects.
    ControlGroupHelper.RemoveModelFromVisitedObjects(ViewData);
    var editorParams = ViewData["TemplateParams"] as InnerTemplateParams ?? new InnerTemplateParams();
    string inputName = Html.NameForModel().ToString();

    var includeChildValidationErrors = false;
    string validStateClass = !ViewData.ModelState.IsValidField(inputName, includeChildValidationErrors) ? "has-error" : "";
    string depthCssClass = "form-group-depth" + ViewData.TemplateInfo.TemplateDepth;
}
<div class="form-group @validStateClass @depthCssClass" data-section="control-group" data-propertyname="@Html.Name("")">
    @Html.Label("", LabelFormatter.LabelText(ViewData.ModelMetadata), new { @class = "control-label" })
    @Html.ValidationMessage("")
    <div>
        @if (editorParams.TemplateDelegate != null)
        {
            Write(editorParams.TemplateDelegate());
        }
        else if (editorParams.ExecuteTemplate != null)
        {
            var helper = editorParams.ExecuteTemplate(Model);
            helper.WriteTo(GetOutputWriter());
        }
        else
        {
            @Html.Editor("", editorParams.TemplateName, editorParams.HtmlFieldName, editorParams.AdditionalViewData)
        }
    </div>
</div>
